scalar Datetime

type Query {
  hello: String!
  helloDb: String
  stateChanges: [StateChange!]
  globalState: String!
  runNo: Int
  runs: [Run!]
  source(fileName: String): [String]
  sourceLine(lineNo: Int!, fileName: String): String
  exception: String
}

type Subscription {
  counter: Int!
  globalState: String!
  runNo: Int
  threadTaskIds: [ThreadTaskId!]!
  threadTaskState(threadId: String!, taskId: String): ThreadTaskState
  stdout: String
}

type Mutation {
  exec: Boolean!
  reset(statement: String): Boolean!
  close: Boolean!
  sendPdbCommand(threadId: String!, taskId: String, command: String!): Boolean!
  updateHelloDbMessage(message: String!): Boolean!
}

type ThreadTaskId {
  threadId: String!
  taskId: String
}

type ThreadTaskState {
  prompting: Int
  fileName: String
  lineNo: Int
  traceEvent: String
}

type Run {
  runNo: Int!
  state: String
  startedAt: Datetime
  endedAt: Datetime
  script: String
  exception: String
}

type StateChange {
  name: String
  datetime: Datetime
  runNo: Int
}
